{"version":3,"sources":["../../../client/components/ngCart/Gruntfile.js"],"names":[],"mappings":";;;;;;AAKA,MAAM,CAAC,OAAO,GAAG,UAAU,KAAK,EAAE;;AAE9B,SAAK,CAAC,UAAU,CAAC;;AAEb,WAAG,EAAE,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC;;AAExC,cAAM,EAAE;AACJ,mBAAO,EAAE;AACL,yBAAS,EAAE,GAAG;aACjB;AACD,gBAAI,EAAE;AACF,mBAAG,EAAE,CAAC,eAAe,EAAE,0BAA0B,EAAE,0BAA0B,CAAC;AAC9E,oBAAI,EAAE,gBAAgB;aACzB;SACJ;;AAED,cAAM,EAAE;AACJ,mBAAO,EAAE;AACL,sBAAM,EAAE,6DAA6D;aACxE;AACD,gBAAI,EAAE;AACF,mBAAG,EAAE,gBAAgB;AACrB,oBAAI,EAAE,oBAAoB;aAC7B;SACJ;;AAED,aAAK,EAAE;AACH,gBAAI,EAAE;AACF,0BAAU,EAAE,eAAe;AAC3B,0BAAU,EAAE,IAAI;aACnB;AACD,gBAAI,EAAE;AACF,0BAAU,EAAE,eAAe;AAC3B,yBAAS,EAAE,IAAI;aAClB;AACD,kBAAM,EAAE;AACJ,0BAAU,EAAE,eAAe;AAC3B,yBAAS,EAAE,IAAI;AACf,wBAAQ,EAAE,CAAC,WAAW,CAAC;aAC1B;SACJ;;AAED,aAAK,EAAE;AACH,iBAAK,EAAE;AACH,qBAAK,EAAE,CAAC,aAAa,CAAC;AACtB,qBAAK,EAAE,CAAC,gBAAgB,CAAC;aAC5B;SACJ;;KAEJ,CAAC,CAAC;;;AAIH,SAAK,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;AAC3C,SAAK,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;AAC3C,SAAK,CAAC,YAAY,CAAC,oBAAoB,CAAC,CAAC;AACzC,SAAK,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC;AAC1C,SAAK,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;;AAGlC,SAAK,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;AAClD,SAAK,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAC;AACvD,SAAK,CAAC,YAAY,CAAC,UAAU,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;AAC/C,SAAK,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC;;AAG7C,SAAK,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;CAGpD,CAAC","file":"Gruntfile.js","sourcesContent":["// grunt build\r\n// grunt karma:unit:start watch\r\n// grunt karma:once\r\n\r\n\r\nmodule.exports = function (grunt) {\r\n\r\n    grunt.initConfig({\r\n\r\n        pkg: grunt.file.readJSON('package.json'),\r\n\r\n        concat: {\r\n            options: {\r\n                separator: ';'\r\n            },\r\n            dist: {\r\n                src: ['src/ngCart.js', 'src/ngCart.directives.js', 'src/ngCart.fulfilment.js'],\r\n                dest: \"dist/ngCart.js\"\r\n            }\r\n        },\r\n\r\n        uglify: {\r\n            options: {\r\n                banner: '/*! <%= pkg.name %> v<%= pkg.version %> */\\n <%= pkg.url %>'\r\n            },\r\n            dist: {\r\n                src: 'dist/ngCart.js',\r\n                dest: \"dist/ngCart.min.js\"\r\n            }\r\n        },\r\n\r\n        karma: {\r\n            unit: {\r\n                configFile: 'karma.conf.js',\r\n                background: true\r\n            },\r\n            once: {\r\n                configFile: 'karma.conf.js',\r\n                singleRun: true\r\n            },\r\n            travis: {\r\n                configFile: 'karma.conf.js',\r\n                singleRun: true,\r\n                browsers: ['PhantomJS']\r\n            }\r\n        },\r\n\r\n        watch: {\r\n            karma: {\r\n                files: ['src/**/*.js'],\r\n                tasks: ['karma:unit:run']\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n\r\n    // Load the plugin that provides the \"uglify\" task.\r\n    grunt.loadNpmTasks('grunt-contrib-concat');\r\n    grunt.loadNpmTasks('grunt-contrib-uglify');\r\n    grunt.loadNpmTasks('grunt-contrib-copy');\r\n    grunt.loadNpmTasks('grunt-contrib-watch');\r\n    grunt.loadNpmTasks('grunt-karma');\r\n\r\n\r\n    grunt.registerTask('build', ['concat', 'uglify']);\r\n    grunt.registerTask('devmode', ['karma:unit', 'watch']);\r\n    grunt.registerTask('testunit', ['karma:unit']);\r\n    grunt.registerTask('test', ['karma:travis']);\r\n\r\n\r\n    grunt.registerTask('default', ['test', 'build']);\r\n\r\n\r\n};\r\n"]}