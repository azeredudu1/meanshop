{"version":3,"sources":["../../client/app/app.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,CAAC,MAAM,CACZ,aAAa,EACb,CAAE,WAAW,EAAE,YAAY,EAAE,YAAY,EAAE,kBAAkB,EAC3D,WAAW,EAAE,cAAc,EAAE,cAAc,EAAE,QAAQ,EACrD,mBAAmB,CAAE,CAAC,CAAC,MAAM,CAC/B,UAAS,cAAc,EAAE,kBAAkB,EAAE,iBAAiB,EAC5D,aAAa,EAAE;AAChB,mBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;;AAElC,kBAAiB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AAClC,cAAa,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;CACnD,CAAC,CAEH,OAAO,CACN,iBAAiB,EACjB,UAAS,UAAU,EAAE,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE;AAC7C,KAAI,KAAK,CAAC;AACV,QAAO;;AAEN,SAAO,EAAG,iBAAS,MAAM,EAAE;AAC1B,SAAM,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,IAAI,EAAE,CAAC;AACtC,OAAI,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE;AAC1B,UAAM,CAAC,OAAO,CAAC,aAAa,GAAG,SAAS,GACpC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC1B;AACD,UAAO,MAAM,CAAC;GACd;;;AAGD,eAAa,EAAG,uBAAS,QAAQ,EAAE;AAClC,OAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,EAAE;AAC5B,KAAC,KAAK,KAAK,KAAK,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA,CAAC,CACxC,EAAE,CAAC,OAAO,CAAC,CAAC;;AAEf,YAAQ,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;AACzB,WAAO,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3B,MAAM;AACN,WAAO,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3B;GACD;EACD,CAAC;CACF,CAAC,CAEH,GAAG,CAAC,UAAS,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE;;AAEvC,WAAU,CAAC,GAAG,CAAC,mBAAmB,EAAE,UAAS,KAAK,EAAE,IAAI,EAAE;AACzD,MAAI,IAAI,CAAC,YAAY,EAAE;AACtB,OAAI,CAAC,UAAU,CAAC,UAAS,QAAQ,EAAE;AAClC,QAAI,CAAC,QAAQ,EAAE;AACd,UAAK,CAAC,cAAc,EAAE,CAAC;AACvB,WAAM,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC;KACnB;IACD,CAAC,CAAC;GACH;EACD,CAAC,CAAC;CACH,CAAC,CAAC","file":"app.js","sourcesContent":["'use strict';\n\nangular.module(\n\t\t'meanshopApp',\n\t\t[ 'ngCookies', 'ngResource', 'ngSanitize', 'btford.socket-io',\n\t\t\t\t'ui.router', 'ui.bootstrap', 'ngFileUpload', 'ngCart',\n\t\t\t\t'braintree-angular' ]).config(\n\t\tfunction($stateProvider, $urlRouterProvider, $locationProvider,\n\t\t\t\t$httpProvider) {\n\t\t\t$urlRouterProvider.otherwise('/');\n\n\t\t\t$locationProvider.html5Mode(true);\n\t\t\t$httpProvider.interceptors.push('authInterceptor');\n\t\t})\n\n.factory(\n\t\t'authInterceptor',\n\t\tfunction($rootScope, $q, $cookies, $injector) {\n\t\t\tvar state;\n\t\t\treturn {\n\t\t\t\t// Add authorization token to headers\n\t\t\t\trequest : function(config) {\n\t\t\t\t\tconfig.headers = config.headers || {};\n\t\t\t\t\tif ($cookies.get('token')) {\n\t\t\t\t\t\tconfig.headers.Authorization = 'Bearer '\n\t\t\t\t\t\t\t\t+ $cookies.get('token');\n\t\t\t\t\t}\n\t\t\t\t\treturn config;\n\t\t\t\t},\n\n\t\t\t\t// Intercept 401s and redirect you to login\n\t\t\t\tresponseError : function(response) {\n\t\t\t\t\tif (response.status === 401) {\n\t\t\t\t\t\t(state || (state = $injector.get('$state')))\n\t\t\t\t\t\t\t\t.go('login');\n\t\t\t\t\t\t// remove any stale tokens\n\t\t\t\t\t\t$cookies.remove('token');\n\t\t\t\t\t\treturn $q.reject(response);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn $q.reject(response);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t})\n\n.run(function($rootScope, $state, Auth) {\n\t// Redirect to login if route requires auth and the user is not logged in\n\t$rootScope.$on('$stateChangeStart', function(event, next) {\n\t\tif (next.authenticate) {\n\t\t\tAuth.isLoggedIn(function(loggedIn) {\n\t\t\t\tif (!loggedIn) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t$state.go('login');\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n});\n"]}